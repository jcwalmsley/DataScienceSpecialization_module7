resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
resampledMed <- apply(resamples, 1, median)
```
library(dplyr)
data("mtcars")
x <- mtcars$mpg[am,]
n <- length(mtcars$mpg)
x <- mtcars$mpg[mtcars$am,]
x <- mtcars$mpg[as.factor(mtcars$am),]
x <- as.factor(mtcars)
x <- as.factor(mtcars$am)
n <- length(mtcars$mpg)
B <- 1000
resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
resampledMed <- apply(resamples, 1, median)
plot(resampledMed)
x <- mtcars$am
n <- length(mtcars$mpg)
B <- 1000
resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
resampledMed <- apply(resamples, 1, median)
plot(resampledMed)
```
```{r Prediction, eval=FALSE, warning=TRUE, include=FALSE}
library(dplyr)
data("mtcars")
x <- mtcars$am
n <- length(mtcars$mpg)
B <- 10000
resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
medians <- apply(resamples, 1, median)
```
```{r Prediction, eval=FALSE, warning=TRUE, include=FALSE}
library(dplyr)
data("mtcars")
x <- mtcars$am[,]
n <- length(mtcars$mpg)
B <- 10000
resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
medians <- apply(resamples, 1, median)
```
x <- mpg[as.factor(am),]
x <- mpg[as.factor(am[,])
n <- length(mtcars$mpg)
x <- mpg[as.factor(am)[,]
n <- length(mtcars$mpg)
x <- as.factor(am)[mpg,]
x <- as.factor(am[mpg,])
library(dplyr)
data("mtcars")
x <- as.factor(am[mpg,])
x <- mpg[as.factor(am)]
n <- length(mtcars$mpg)
B <- 10000
resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
medians <- apply(resamples, 1, median)
```
n <- length(mpg)
B <- 10000
resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
medians <- apply(resamples, 1, median)
```
g = ggplot(data.frame(medians = medians), aes(x = medians))
g = g + geom_histogram(color = "black", fill = "lightblue", binwidth = 0.05) g
x <- mpg[,am]
x <- mpg[,as.factor(am0]
x <- mpg[,as.factor(am)]
x <- mpg[as.factor(am),]
n <- length(mpg)
x <- mpg[factor(am),]
n <- length(mpg)
data("mtcars")
x <- mpg[factor(am),]
x <- mpg[am,]
x <- mpg[am,mpg]
x <- mtcars$mpg[mtcars$am,]
x <- mtcars$mpg[as.factor(mtcars$am),]
x <- mtcars$mpg[as.factor(mtcars$am)]
n <- length(mpg)
B <- 10000
resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
medians <- apply(resamples, 1, median)
```
g = ggplot(data.frame(medians = medians), aes(x = medians))
g = g + geom_histogram(color = "black", fill = "lightblue", binwidth = 0.05) g
x <- mtcars$mpg[mtcars$am)]
x <- mtcars$mpg[mtcars$am,]
x <- mtcars$mpg[,mtcars$am]
x <- mtcars$mpg[,factor(mtcars$am0]
x <- mtcars$mpg[am]
n <- length(mpg)
B <- 10000
resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
medians <- apply(resamples, 1, median)
```
g = ggplot(data.frame(medians = medians), aes(x = medians))
x <- mtcars$mpg[as.factor(am)]
n <- length(mpg)
B <- 10000
resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
medians <- apply(resamples, 1, median)
```
g = ggplot(data.frame(medians = medians), aes(x = medians))
g = g + geom_histogram(color = "black", fill = "lightblue", binwidth = 0.05) g
```{r Prediction, eval=FALSE, warning=TRUE, include=FALSE}
library(dplyr);library(ggplot2)
data("mtcars")
newx <- data.frame(x = seq(min(x), max(x), length = 32))
p1 <- data.frame(predict(fit, newdata = newx, interval = ("confinence")))
p2 <- data.frame(predict(fit, newdata = newx, interval = ("prediction")))
p1$interval <- "confidence"
p1$interval <- "prediction"
p1$x <- newx$x
p2$x <- newx$x
dat <- rbind(p1,p2)
names(dat)[1]="y"
#
g <- ggplot(dat, aes(x = x, y = y))
g <- g + geom_ribbon(aes(ymin = lwr, ymax = upr, fill = interval), alpha = 0.2)
g <- g + geom_line()
g <- g + geom_point(data = data.frame(x = x, y= y), aes(x = x, y = y), size = 4)
g
```
library(dplyr);library(ggplot2)
data("mtcars")
newx <- data.frame(x = seq(min(x), max(x), length = 32))
p1 <- data.frame(predict(fit, newdata = newx, interval = ("confinence")))
p2 <- data.frame(predict(fit, newdata = newx, interval = ("prediction")))
p1 <- data.frame(predict(fit, newdata = newx, interval = ("confidence")))
p2 <- data.frame(predict(fit, newdata = newx, interval = ("prediction")))
fit <- lm(mpg ~ am, data = mtcars)
newx <- data.frame(x = seq(min(x), max(x), length = 32))
p1 <- data.frame(predict(fit, newdata = newx, interval = ("confidence")))
p2 <- data.frame(predict(fit, newdata = newx, interval = ("prediction")))
p1$interval <- "confidence"
p1$interval <- "prediction"
p1$x <- newx$x
p2$x <- newx$x
dat <- rbind(p1,p2)
names(dat)[1]="y"
#
g <- ggplot(dat, aes(x = x, y = y))
g <- g + geom_ribbon(aes(ymin = lwr, ymax = upr, fill = interval), alpha = 0.2)
g <- g + geom_line()
g <- g + geom_point(data = data.frame(x = x, y= y), aes(x = x, y = y), size = 4)
g
```
x <- as.integer(am)
data("mtcars")
x <- as.integer(am)
y <- mpg
n <- length(y)
fit <- lm(mpg ~ am, data = mtcars)
newx <- data.frame(x = seq(min(x), max(x), length = 32))
p1 <- data.frame(predict(fit, newdata = newx, interval = ("confidence")))
p2 <- data.frame(predict(fit, newdata = newx, interval = ("prediction")))
p1$interval <- "confidence"
p1$interval <- "prediction"
p1$x <- newx$x
p2$x <- newx$x
dat <- rbind(p1,p2)
names(dat)[1]="y"
newx <- data.frame(x = x + 2, length = 32))
y <- mpg
n <- length(y)
fit <- lm(mpg ~ am, data = mtcars)
newx <- data.frame(x = x + 2, length = 32))
p1 <- data.frame(predict(fit, newdata = newx, interval = ("confidence")))
newx <- data.frame(x = x + 2)
p1 <- data.frame(predict(fit, newdata = newx, interval = ("confidence")))
p2 <- data.frame(predict(fit, newdata = newx, interval = ("prediction")))
p1$interval <- "confidence"
p1$interval <- "prediction"
p1$x <- newx$x
p2$x <- newx$x
dat <- rbind(p1,p2)
names(dat)[1]="y"
newx <- data.frame(x + 2)
p1 <- data.frame(predict(fit, newdata = newx, interval = ("confidence")))
p2 <- data.frame(predict(fit, newdata = newx, interval = ("prediction")))
p1$interval <- "confidence"
p1$interval <- "prediction"
p1$x <- newx$x
p2$x <- newx$x
dat <- rbind(p1,p2)
names(dat)[1]="y"
fp <- lm(mpg ~ am. data = mtcars)
coef(summary(fp))
fp <- lm(mpg ~ am. data = mtcars)
coef(summary(fp))
fp <- lm(mpg ~ am, data = mtcars)
coef(summary(fp))
confint(fp)
library(dplyr);library(ggplot2)
data("mtcars")
fp <- lm(mpg ~ am, data = mtcars)
coef(summary(fp))
confint(fp)
g <- ggplot(mtcars, aes(x = am, y = mpg))
g <- g + geom_smooth(aes_auto())
g <- g + geom_smooth(aes_auto(fp))
g
g <- g + geom_smooth(aes_auto(mtcars))
g <- g + geom_errorbar(aes(x=am,y=mpg))
library(dplyr);library(ggplot2)
data("mtcars")
fp <- lm(mpg ~ am, data = mtcars)
coef(summary(fp))
confint(fp)
g <- ggplot(mtcars, aes(x = am, y = mpg))
g <- g + geom_errorbar(aes(x=am,y=mpg))
g
g <- g + geom_ribbon(aes(am,mpg))
g
g <- g + geom_ribbon()
g
data("mtcars")
fp <- lm(mpg ~ am, data = mtcars)
coef(summary(fp))
confint(fp)
g <- ggplot(mtcars, aes(x = am, y = mpg))
g <- g + geom_smooth(aes(x=am, y=mpg))
g
library(dplyr);library(ggplot2);library(graphics)
data("mtcars")
fp <- lm(mpg ~ am, data = mtcars)
coef(summary(fp))
confint(fp)
g <- ggplot(mtcars, aes(x = am, y = mpg))
g <- g + geom_smooth(aes(x=am, y=mpg))
g
```
g <- ggplot(mtcars, aes(x = mtcars$am, y = mycars$mpg))
g <- g + geom_smooth(aes(x=am, y=mpg))
g <- g + geom_smooth(aes(x=mtcars$am, y=mtcars$mpg))
g
temp <- mtcars: temp$resid = resid(fp)
fp <- lm(mpg ~ am, data = mtcars)
temp <- mtcars: temp$resid = resid(fp)
library(dplyr);library(ggplot2);library(graphics)
data("mtcars")
fp <- lm(mpg ~ am, data = mtcars)
temp <- mtcars: temp$resid = resid(fp)
# coef(summary(fp))
temp <- mtcars; temp$resid = resid(fp)
# coef(summary(fp))
# confint(fp)
g <- ggplot(temp, aes(x = am, y = resid))
g <- g + geom_point(alpha=.5, cex = 5)
g
library(dplyr);library(ggplot2);library(graphics)
data("mtcars")
fp <- lm(mpg ~ am, data = mtcars)
temp <- mtcars; temp$resid = resid(fp)
# coef(summary(fp))
# confint(fp)
g <- ggplot(temp, aes(x = am, y = resid))
g <- g + geom_point(alpha=.5, cex = 5)
g
g <- ggplot(fp, aes(x = am, y = resid))
g <- g + geom_point(alpha=.5, cex = 5)
g
```
fp <- lm(mpg ~ I(wt - mean(wt), data = mtcars)
m = mean(wt)
m
fp <- lm(mpg ~ I(wt - mean(wt), data = mtcars)
m = mean(wt)
library(dplyr);library(ggplot2);library(graphics)
data("mtcars")
fp <- lm(mpg ~ I(wt - mean(wt), data = mtcars)
m = mean(wt)
m
fp <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
predict(fp, newdata = data.frame(am=m), interval = "confidence")
library(dplyr);library(ggplot2);library(graphics)
data("mtcars")
fp <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
[1] 3.21725
predict(fp, newdata = data.frame(am=m), interval = "confidence")
data("mtcars")
fp <- lm(mpg ~ I(mtcars$wt - mean(mtcars$wt)), data = mtcars)
m = mean(mtcars$wt)
m
[1] 3.21725
predict(fp, newdata = data.frame(am=m), interval = "confidence")
predict(fp, newdata = data.frame(mtcars$am=m), interval = "confidence")
predict(fp, newdata = data.frame(mtcars$wt=m), interval = "confidence")
```
fp <- lm(mpg ~ I(mtcars$wt - mean(mtcars$wt)), data = mtcars)
m = mean(mtcars$wt)
m
[1] 3.21725
predict(fp, newdata = data.frame(mtcars$wt=m), interval = "confidence")
```
data("mtcars")
fp <- lm(mpg ~ I(mtcars$wt - mean(mtcars$wt)), data = mtcars)
m = mean(mtcars$wt)
m
[1] 3.21725
predict(fp, newdata = data.frame(mtcars$wt=m), interval = "confidence")
```
library(dplyr);library(ggplot2);library(graphics)
data("mtcars")
fp <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
[1] 3.21725
predict(fp, newdata = data.frame(wt=m), interval = "confidence")
data("mtcars")
fp1 <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
[1] 3.21725
predict(fp1, newdata = data.frame(wt=m), interval = "confidence")
fp2 <- lm(mpg ~ I(qsec - mean(qsec)), data = mtcars)
m = mean(qsec)
m
[1] 3.21725
predict(fp2, newdata = data.frame(qsec=m), interval = "confidence")
Predictive:
```{r Prediction, eval=FALSE, warning=TRUE, include=FALSE}
library(dplyr);library(ggplot2);library(graphics)
data("mtcars")
fc1 <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
[1] 3.21725
predict(fc1, newdata = data.frame(wt=m), interval = "confidence")
fp1 <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
[1] 3.21725
predict(fp1, newdata = data.frame(wt=m), interval = "predict")
---
fc2 <- lm(mpg ~ I(qsec - mean(qsec)), data = mtcars)
m = mean(qsec)
m
[1] 3.21725
predict(fc2, newdata = data.frame(qsec=m), interval = "confidence")
fp2 <- lm(mpg ~ I(qsec - mean(qsec)), data = mtcars)
m = mean(qsec)
m
[1] 3.21725
predict(fp2, newdata = data.frame(qsec=m), interval = "predict")
```
```{r Prediction, eval=FALSE, warning=TRUE, include=FALSE}
library(dplyr);library(ggplot2);library(graphics)
data("mtcars")
fc1 <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
[1] 3.21725
predict(fc1, newdata = data.frame(wt=m), interval = "confidence")
fp1 <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
[1] 3.21725
predict(fp1, newdata = data.frame(wt=m), interval = "predict")
---
fc2 <- lm(mpg ~ I(qsec - mean(qsec)), data = mtcars)
m = mean(qsec)
m
[1] 3.21725
predict(fc2, newdata = data.frame(qsec=m), interval = "confidence")
fp2 <- lm(mpg ~ I(qsec - mean(qsec)), data = mtcars)
m = mean(qsec)
m
[1] 3.21725
predict(fp2, newdata = data.frame(qsec=m), interval = "predict")
```
library(dplyr);library(ggplot2);library(graphics)
data("mtcars")
fc1 <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
[1] 3.21725
predict(fc1, newdata = data.frame(wt=m), interval = "confidence")
fp1 <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
[1] 3.21725
predict(fp1, newdata = data.frame(wt=m), interval = "predict")
---
fc2 <- lm(mpg ~ I(qsec - mean(qsec)), data = mtcars)
#
fc2 <- lm(mpg ~ I(qsec - mean(qsec)), data = mtcars)
m = mean(qsec)
m
[1] 3.21725
predict(fc2, newdata = data.frame(qsec=m), interval = "confidence")
fp2 <- lm(mpg ~ I(qsec - mean(qsec)), data = mtcars)
m = mean(qsec)
m
[1] 3.21725
predict(fp2, newdata = data.frame(qsec=m), interval = "predict")
```{r Prediction, eval=FALSE, warning=TRUE, include=FALSE}
library(dplyr);library(ggplot2);library(graphics)
data("mtcars")
fc1 <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
[1] 3.21725
predict(fc1, newdata = data.frame(wt=m), interval = "confidence")
fp1 <- lm(mpg ~ I(wt - mean(wt)), data = mtcars)
m = mean(wt)
m
[1] 3.21725
predict(fp1, newdata = data.frame(wt=m), interval = "prediction")
#
fc2 <- lm(mpg ~ I(qsec - mean(qsec)), data = mtcars)
m = mean(qsec)
m
[1] 3.21725
predict(fc2, newdata = data.frame(qsec=m), interval = "confidence")
fp2 <- lm(mpg ~ I(qsec - mean(qsec)), data = mtcars)
m = mean(qsec)
m
[1] 3.21725
predict(fp2, newdata = data.frame(qsec=m), interval = "prediction")
```
predict(fp2, newdata = data.frame(qsec=m), interval = "pre")
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(mtcars[1:11], lower.panel=panel.smooth, upper.panel = panel.cor, cex=1.5, pch=20, col="lightblue", cex.labels=2, font.lables =2, main = "MPG mtcars data")
data(mtcars)
par(mfrow = c(2,1), mar = c(4,4,4,4)) # set margin
mtcars$vs <- factor(mtcars$vs, labels = c("V-block", "S-block")); mtcars$am <- factor(mtcars$am, labels = c("Auto", "Manual")); mtcars$gear <- factor(mtcars$gear); mtcars$carb <- factor(mtcars$carb)
hist(mtcars$mpg[mtcars$am=="Auto"], breaks=10, xlab = "Miles-Per-gallon", ylab = "Frequency", main = "Automatic Transmission", col = "yellow", xlim = range(5:40))
abline(v=mean(mtcars$mpg[mtcars$am=="Auto"]), col="red", lwd = 4)
hist(mtcars$mpg[mtcars$am=="Manual"], breaks=10, xlab = "Miles-Per-gallon", ylab = "Frequency", main = "Manual Transmission", col="lightblue", xlim = range(5:40))
abline(v=mean(mtcars$mpg[mtcars$am=="Manual"]), col="blue", lwd = 4)
data("mtcars");par(mfrow = c(1,1), mar = c(4,4,4,4))
mtcars$vs <- factor(mtcars$vs, labels = c("V-block", "S-block")); mtcars$am <- factor(mtcars$am, labels = c("Auto", "Manual")); mtcars$gear <- factor(mtcars$gear); mtcars$carb <- factor(mtcars$carb)
boxplot(mpg ~ am, data = mtcars, col = (c("yellow","lightblue")), ylab = "Miles-Per-Gallon", xlab = "Transmission", main =  "Automatic vs Manual Transmission, Miles Per Gallon Ratings")
data("mtcars");par(mfrow = c(1,1), mar = c(4,4,4,4))
mtcars$vs <- factor(mtcars$vs, labels = c("V-block", "S-block")); mtcars$am <- factor(mtcars$am, labels = c("Auto", "Manual")); mtcars$gear <- factor(mtcars$gear); mtcars$carb <- factor(mtcars$carb)
boxplot(mpg ~ am, data = mtcars, col = (c("yellow","lightblue")), ylab = "Miles-Per-Gallon", xlab = "Transmission", main =  "Automatic vs Manual Transmission, Miles Per Gallon Ratings")
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(mtcars[1:11], lower.panel=panel.smooth, upper.panel = panel.cor, cex=1.5, pch=20, col="lightblue", cex.labels=2, font.lables =2, main = "MPG mtcars data")
data(mtcars)
par(mfrow = c(2,1), mar = c(4,4,4,4)) # set margin
mtcars$vs <- factor(mtcars$vs, labels = c("V-block", "S-block")); mtcars$am <- factor(mtcars$am, labels = c("Auto", "Manual")); mtcars$gear <- factor(mtcars$gear); mtcars$carb <- factor(mtcars$carb)
hist(mtcars$mpg[mtcars$am=="Auto"], breaks=10, xlab = "Miles-Per-gallon", ylab = "Frequency", main = "Automatic Transmission", col = "yellow", xlim = range(5:40))
abline(v=mean(mtcars$mpg[mtcars$am=="Auto"]), col="red", lwd = 4)
hist(mtcars$mpg[mtcars$am=="Manual"], breaks=10, xlab = "Miles-Per-gallon", ylab = "Frequency", main = "Manual Transmission", col="lightblue", xlim = range(5:40))
abline(v=mean(mtcars$mpg[mtcars$am=="Manual"]), col="blue", lwd = 4)
data("mtcars");par(mfrow = c(1,1), mar = c(4,4,4,4))
mtcars$vs <- factor(mtcars$vs, labels = c("V-block", "S-block")); mtcars$am <- factor(mtcars$am, labels = c("Auto", "Manual")); mtcars$gear <- factor(mtcars$gear); mtcars$carb <- factor(mtcars$carb)
boxplot(mpg ~ am, data = mtcars, col = (c("yellow","lightblue")), ylab = "Miles-Per-Gallon", xlab = "Transmission", main =  "Automatic vs Manual Transmission, Miles Per Gallon Ratings")
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(mtcars[1:11], lower.panel=panel.smooth, upper.panel = panel.cor, cex=1.5, pch=20, col="lightblue", cex.labels=2, font.lables =2, main = "MPG mtcars data")
